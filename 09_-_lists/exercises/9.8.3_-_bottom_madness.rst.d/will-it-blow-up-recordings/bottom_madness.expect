#!/usr/bin/env expect

log_user 0
spawn stack exec -- ghci -v0
log_user 1

expect "·∾ "; send "\n"

# 1.
send_user "\n\nQuestion 1 ---------------------------\n"
expect "·∾ "; send "\[x^y | x <- \[1..5\], y <- \[2, undefined\]\]\n"
# [1,*** Exception: Prelude.undefined
expect "·∾ "; send "\n"


# 2.
send_user "\n\nQuestion 2 ---------------------------\n"
expect "·∾ "; send "take 1 $ \[x^y | x <- \[1..5\], y <- \[2, undefined\]\]\n"
expect "\[1\]"
expect "·∾ "; send "\n"


# 3.
send_user "\n\nQuestion 3 ---------------------------\n"
expect "·∾ "; send "sum \[1, undefined, 3\]\n"
# *** Exception: Prelude.undefined
expect "·∾ "; send "\n"


# 4.
send_user "\n\nQuestion 4 ---------------------------\n"
expect "·∾ "; send "length \[1, 2, undefined\]\n"
expect "3"
expect "·∾ "; send "\n"


# 5.
send_user "\n\nQuestion 5 ---------------------------\n"
expect "·∾ "; send "length $ \[1, 2, 3\] ++ undefined\n"
# *** Exception: Prelude.undefined
expect "·∾ "; send "\n"


# 6.
send_user "\n\nQuestion 6 ---------------------------\n"
expect "·∾ "; send "take 1 $ filter even \[1, 2, 3, undefined\]\n"
expect "\[2\]"
expect "·∾ "; send "\n"


# 7.
send_user "\n\nQuestion 7 ---------------------------\n"
expect "·∾ "; send "take 1 $ filter even \[1, 3, undefined\]\n"
# *** Exception: Prelude.undefined
expect "·∾ "; send "\n"


# 8.
send_user "\n\nQuestion 8 ---------------------------\n"
expect "·∾ "; send "take 1 $ filter odd \[1, 3, undefined\]\n"
expect "\[1\]"
expect "·∾ "; send "\n"


# 9.
send_user "\n\nQuestion 9 ---------------------------\n"
expect "·∾ "; send "take 2 $ filter odd \[1, 3, undefined\]\n"
expect "\[1,3\]"
expect "·∾ "; send "\n"


# 10.
send_user "\n\nQuestion 10 ---------------------------\n"
expect "·∾ "; send "take 3 $ filter odd \[1, 3, undefined\]\n"
# [1,3*** Exception: Prelude.undefined
expect "·∾ "
