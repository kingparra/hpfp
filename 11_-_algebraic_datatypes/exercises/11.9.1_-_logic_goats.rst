11.9.1 Exercises: Logic Goats
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1. Reusing the ``TooMany`` type class, write an instance of the type class for
   the type ``(Int, String)``. This will require adding a language pragma named
   ``FlexibleInstances`` *if* you do not use a newtype -- GHC will tell you what
   to do.

   .. include:: exercises/11.9.1_-_logic_goats.rst.d/logicgoats/src/Lib.hs
      :start-after: -- Question 1
      :end-before: -- End question 1

2. Make another ``TooMany`` instance for ``(Int, Int)``. Sum the values together
   under the assumption this is a count of goats from two fields.

   .. include:: exercises/11.9.1_-_logic_goats.rst.d/logicgoats/src/Lib.hs
      :start-after: -- Question 2
      :end-before: -- End question 2

3. Make another ``TooMany`` instance, this time for ``(Num a, TooMany a) => (a,
   a)``. This can mean whatever you want, such as summing the two numbers
   together.

   Ok, so I'm stuck on this question.

   .. include:: exercises/11.9.1_-_logic_goats.rst.d/logicgoats/src/Lib.hs
      :start-after: -- Question 3
      :end-before: -- End question 3
