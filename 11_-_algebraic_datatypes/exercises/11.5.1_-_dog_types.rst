11.5.1 Exercises: Dog Types
^^^^^^^^^^^^^^^^^^^^^^^^^^^
In the following example code...

.. include:: exercises/11.5.1_-_dog_types.rst.d/dogtypes.hs

Terminal recording version first. Also see the ``*.expect`` file for a
terse representation of the answers (this is a bit faster to read).

.. raw:: html

   <script id="asciicast-5vDDmkX7BbSiqJOVW4cVdJSFF"
   src="https://asciinema.org/a/5vDDmkX7BbSiqJOVW4cVdJSFF.js"
   async></script>

1. Is ``Doggies`` a type constructor or a data constructor?

   ``Doggies`` is a type constructor. We know this because it's on the left hand
   side of the type definition, between the ``data`` keyword and the ``=`` sign.

   Proof::

    ·∾ Doggies
    <interactive>:12:1: error: Data constructor not in scope: Doggies

    ·∾ :info Doggies
    data Doggies a = Husky a | Mastiff a
    instance [safe] Show a => Show (Doggies a)
    instance [safe] Eq a => Eq (Doggies a)

2. What is the kind of ``Doggies``?

   Since the type constructor is awaiting one argument, it should be ``* -> *``, but
   let's find out::

     ·∾ :kind Doggies
     Doggies :: * -> *


3. What is the kind of ``Doggies String``?

   That would be a fully applied type constructor, of kind ``*``::

     ·∾ :kind Doggies String
     Doggies String :: *

4. What is the type of ``Husky 10``?

   It should be ``:: Num a => Doggies a``, I think. Let's see::

     ·∾ :type Husky 10
     Husky 10 :: Num a => Doggies a


5. What is the type of ``Husky (10 :: Integer)``?

   It would be ``:: Doggies Integer``::

     ·∾ :type Husky (10 :: Integer)
     Husky (10 :: Integer) :: Doggies Integer

6. What is the type of ``Mastiff "Scooby Doo"``?

   This should be ``:: Doggies String``::

     ·∾ :type Mastiff "Scooby Doo"
     Mastiff "Scooby Doo" :: Doggies [Char]

7. Is ``DogueDeBordeaux`` a type constructor or a data constructor?

   There is both a type constructor and data constructor with that name in the
   definition ``data DogueDeBordeaux doge = DogueDeBordeaux doge``::

     ·∾ :info DogueDeBordeaux
     data DogueDeBordeaux doge = DogueDeBordeaux doge
             -- Defined at exercises/dogtypes.hs:4:1

     ·∾ :type DogueDeBordeaux 3
     DogueDeBordeaux 3 :: Num doge => DogueDeBordeaux doge

     ·∾ :kind DogueDeBordeaux
     DogueDeBordeaux :: * -> *

8. What is the type of ``DogueDeBordeaux``?

   ``:: doge -> DogueDeBordeaux doge``::

     ·∾ :type DogueDeBordeaux
     DogueDeBordeaux :: doge -> DogueDeBordeaux doge

9. What is the type of ``DogueDeBordeaux "doggie!"``

   It should be ``:: DogueDeBordeaux String``::

     ·∾ :type DogueDeBordeaux "doggie!"
     DogueDeBordeaux "doggie!" :: DogueDeBordeaux [Char]
     ·∾ -- String is an alias for [Char]
