17.5.3 Exercises: Lookups
^^^^^^^^^^^^^^^^^^^^^^^^^
.. page 696

In the following exercises you will need to use
these terms to make the expressions typecheck.

1. ``pure``
2. ``(<$>)``
3. ``(<*>``

Make the following expressions typecheck:

1. ::

     added :: Maybe Integer
     added = (+3) (lookup 3 $ zip [1,2,3] [4,5,6])

2. ::

     y :: Maybe Integer
     y =  lookup 3 $ zip [1,2,3] [4,5,6]

     z :: Maybe Integer
     z = lookup 2 $ zip [1,2,3] [4,5,6]

     tupled :: Maybe (Integer, Integer)
     tupled = (,) y z

3. ::

     import Data.List (elemIndex)

     x :: Maybe Int
     x = elemIndex 3 [1,2,3,4,5]

     y :: Maybe Int
     y = elemIndex 4 [1,2,3,4,5]

     max' :: Int -> Int -> Int
     max' = max

     maxed :: Maybe Int
     maxed = max' x y
