10.6.1 Exercises: Database processing
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Let's write some functions to process the following data:

::

  import Data.Time

  data DatabaseItem = DbString String
                    | DbNumber Integer
                    | DbDate UTCTime
                    deriving (Eq, Ord, Show)

  theDatabase :: [DatabaseItem]
  theDatabase =
    [ DbDate (UTCTime
              (fromGregorian 1911 5 1)
              (secondsToDiffTime 34123))
    , DbNumber 9001
    , DbString "Hello, world!"
    , DbDate (UTCTime
              (fromGregorian 1921 5 1)
              (secondsToDiffTime 34123))
    ]

1. Write a function that filters for ``DbDate`` values and
   returns a list of the ``UTCTime`` values inside them.

   ::

     filterDbDate :: [DatabaseItem] -> [UTCTime]
     filterDbDate = undefined

   .. include::  exercises/10.6.1_-_database_processing.rst.d/database-processing/src/Lib.hs
      :code:
      :start-after: -- Question 1
      :end-before: -- Question 2

2. Write a function that filters for ``DbNumber`` values and
   returns a list of the Integer values inside them.

   ::

     filterDbNumber :: [DatabaseItem] -> [Integer]
     filterDbNumber = undefined

   .. include::  exercises/10.6.1_-_database_processing.rst.d/database-processing/src/Lib.hs
      :code:
      :start-after: -- Question 2
      :end-before: -- Question 3

3. Write a function that gets the most recent date.

   ::

     mostRecent :: [DatabaseItem] -> UTCTime
     mostRecent = undefined

   .. include::  exercises/10.6.1_-_database_processing.rst.d/database-processing/src/Lib.hs
      :code:
      :start-after: -- Question 3
      :end-before: -- Question 4

4. Write a function that sums all of the ``DbNumber`` values.

   ::

      sumDb :: [DatabaseItem] -> Integer
      sumDb = undefined

   .. include::  exercises/10.6.1_-_database_processing.rst.d/database-processing/src/Lib.hs
      :code:
      :start-after: -- Question 4
      :end-before: -- Question 5

5. Write a function that gets the average of the ``DbNumber``
   values.

   ::

     -- You'll probably need to use fromIntegral
     -- to get from Integer to Double.
     avgDb :: [DatabaseItem] -> Double
     avgDb = undefined

   .. include::  exercises/10.6.1_-_database_processing.rst.d/database-processing/src/Lib.hs
      :code:
      :start-after: -- Question 5
