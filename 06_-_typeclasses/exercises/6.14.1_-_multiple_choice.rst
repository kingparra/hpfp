6.14.1 Multiple choice
^^^^^^^^^^^^^^^^^^^^^^
1. The ``Eq`` class

    a) includes all types in Haskell
    b) is the same as the Ord class
    c) **makes equality tests possible** ::

        ·∾ :doc Eq
         The 'Eq' class defines equality ('==') and inequality ('/=').

    d) only includes numeric types

2. The type class ``Ord``

    a) allows any two values to be compared
    b) **is a subclass of Eq** ::

        ·∾ :info Ord
        class Eq a => Ord a where

    c) is a superclass of ``Eq``
    d) has no instance for ``Bool``

3. Suppose the type class ``Ord`` has an operator ``>``. What is the type of ``>``?

    a) **Ord a => a -> a -> Bool** ::

        ·∾ :type (>)
        (>) :: Ord a => a -> a -> Bool

    b) ``Ord a => Int -> Bool``
    c) ``Ord a => a -> Char``
    d) ``Ord a => Char -> [Char]``

4. In ``x = divMod 16 12``

    a) the type of ``x`` is ``Integer``
    b) the value of ``x`` is undecidable
    c) **the type of x is a tuple** ::

        ·∾ divMod 16 12
        (1,4)
        ·∾ :type it
        it :: Integral a => (a, a)

    d) ``x`` is equal to ``12 / 16``

5. The type class ``Integral`` includes

    a) **Int and Integer numbers** ::

        ·∾ :info Integral
        class (Real a, Enum a) => Integral a where
                          . . .
        instance Integral Word     -- Defined in ‘GHC.Real’
        instance Integral Integer  -- Defined in ‘GHC.Real’
        instance Integral Int      -- Defined in ‘GHC.Real’

    b) integral, real, and fractional numbers
    c) Schrodinger’s cat
    d) only positive numbers

