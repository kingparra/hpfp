18.4.3.3 Short Exercises: Either Monad
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Implement the ``Either Monad``.

::

  data Sum a b = First a | Second b deriving (Eq, Show)

  instance Functor (Sum a) where
    fmap = undefined

  instance Applicative (Sum a) where
    pure = undefined
    (<*>) = undefined

  instance Monad (Sum a) where
    return = pure
    (>>=) = undefined

Alright, here is an attempt.

.. include:: exercises/18.4.3.3_-_either_monad.rst.d/sum-monad/src/Lib.hs
   :code:
