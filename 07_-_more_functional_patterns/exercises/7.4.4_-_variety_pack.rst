7.4.4 Exercises: Variety Pack
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
1. Given the following declarations
   
   ::

      k (x, y) = x
      k1 = k ((4-1), 10)
      k2 = k ("three", (1 + 2))
      k3 = k (3, True)

   a. What is the type of ``k``?

      It is ``k :: (a, b) -> a``.

   b. What is the type of ``k2``? Is it the same type as ``k1`` or
      ``k3``?

      ``k2 :: [Char]``, no.

   c. Of ``k1``, ``k2``, ``k3``, which will return the number ``3``
      as the result?

      ``k3`` will.

2. Fill in the definition of the following function
   
   ::

     f :: (a, b, c)
       -> (d, e, f)
       -> ((a, d), (c, f))
     f = undefined

   Sure. ``f (a,_,c) (d,_,f) = ((a,d),(c,f))``. Is that right?
   Let's test it::

     *RegisteredUser> f (1,2,3) (4,5,6)
     ((1,4),(3,6))

   Seems OK!
